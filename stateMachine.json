{
  "Comment": "The step function prepairs data from S3 and run a policy search",
  "StartAt": "Start Data Prep Instance",
  "Version": "1.0",
  "TimeoutSeconds": 10800,
  "States": {
    "Start Data Prep Instance": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:StartStopEC2",
      "Parameters": {
        "InstanceIds": [
          "i-005ec5286b50e7307"
        ],
        "action": "start"
      },
      "Next": "Wait X Seconds"
    },
    "Wait X Seconds": {
      "Type": "Wait",
      "SecondsPath": "$.wait_time",
      "Next": "Get Instance Status"
    },
    "Get Instance Status": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:CheckIfEC2StatusOK",
      "Parameters": {
        "InstanceIds": [
          "i-005ec5286b50e7307"
        ]
      },
      "Next": "Instance Start Complete?",
      "InputPath": "$.guid",
      "ResultPath": "$.status",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ]
    },
    "Instance Start Complete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "ok",
          "Next": "Run Data Prep Bash Commands"
        },
        {
          "Variable": "$.status",
          "StringEquals": "initializing",
          "Next": "Wait X Seconds"
        }
      ],
      "Default": "Wait X Seconds"
    },
    "Run Data Prep Bash Commands": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "hilcorp-lower48-plunger-send-bash-scripts-to-EC2",
        "Payload": {
          "commands": [
            "##### First Pull Git Repository #####",
            "cd $(pwd)/EBSPlungerFiles/HilcorpPlungerLift",
            "git pull origin main",
            "cd ../../",
            "##### Sync S3 Bucket with local EBS #####",
            "#aws s3 sync s3://hilcorp-l48operations-plunger-lift-main/DataByAPI/ $(pwd)/EBSPlungerFiles/DataByAPI/",
            "##### Run the data prep function #####",
            "docker container start testContainer",
            "#docker exec testContainer python EBSPlungerFiles/HilcorpPlungerLift/PrepTFRecord.py",
            "docker container stop testContainer"
          ],
          "InstanceIds": [
            "i-005ec5286b50e7307"
          ],
          "token.$": "$$.Task.Token"
        }
      },
      "Next": "Stop Data Prep Instance"
    },
    "Stop Data Prep Instance": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:StartStopEC2",
      "Parameters": {
        "InstanceIds": [
          "i-005ec5286b50e7307"
        ],
        "action": "stop"
      },
      "Next": "Start GPU Instance"
    },
    "Start GPU Instance": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:StartStopEC2",
      "Parameters": {
        "InstanceIds": [
          "i-08b67cde7a8a25c70"
        ],
        "action": "start"
      },
      "Next": "Wait X Seconds GPU"
    },
    "Wait X Seconds GPU": {
      "Type": "Wait",
      "SecondsPath": "$.wait_time",
      "Next": "Get GPU Instance Status"
    },
    "Get GPU Instance Status": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:CheckIfEC2StatusOK",
      "Parameters": {
        "InstanceIds": [
          "i-08b67cde7a8a25c70"
        ]
      },
      "Next": "GPU Instance Start Complete?",
      "InputPath": "$.guid",
      "ResultPath": "$.status",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ]
    },
    "GPU Instance Start Complete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "ok",
          "Next": "Run Direct Policy Search Bash Commands"
        },
        {
          "Variable": "$.status",
          "StringEquals": "initializing",
          "Next": "Wait X Seconds GPU"
        }
      ],
      "Default": "Wait X Seconds GPU"
    },
    "Run Direct Policy Search Bash Commands": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "hilcorp-lower48-plunger-send-bash-scripts-to-EC2",
        "Payload": {
          "commands": [
            "##### First Pull Git Repository #####",
            "cd $(pwd)/EBSPlungerFiles/HilcorpPlungerLift",
            "git pull origin main",
            "cd ../../",
            "##### Run the policy search function #####",
            "docker container start testContainer",
            "#docker exec testContainer python EBSPlungerFiles/HilcorpPlungerLift/DirectPolicySearch.py",
            "docker container stop testContainer"
          ],
          "InstanceIds": [
            "i-08b67cde7a8a25c70"
          ],
          "token.$": "$$.Task.Token"
        }
      },
      "Next": "Stop GPU Instance"
    },
    "Stop GPU Instance": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-west-2:446356438225:function:StartStopEC2",
      "Parameters": {
        "InstanceIds": [
          "i-08b67cde7a8a25c70"
        ],
        "action": "stop"
      },
      "End": true
    }
  }
}